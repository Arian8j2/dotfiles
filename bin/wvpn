#!/bin/bash

user="arian"
without_vpn_ns_name="wvpn"
default_interface="eno1"
static_ip_address="192.168.1.108"
gateway_address="192.168.1.1"

if [ $(id -u) -ne 0 ]; then
    echo "run script with 'sudo -E'" > /dev/stderr
    exit 1
fi

setup() {
    interfaces=$(ip -br a | cut -d' ' -f1)
    if ! echo "$interfaces" | grep "^$default_interface$" > /dev/null; then
        echo "default interface not exists" >&2
        exit 1
    fi

    if [ ! -f /etc/netns/$without_vpn_ns_name/resolv.conf ]; then
        mkdir -p /etc/netns/$without_vpn_ns_name/
        cp /etc/resolv.conf /etc/netns/$without_vpn_ns_name/resolv.conf
    fi

    ip link add macvlan0 link $default_interface type macvlan mode bridge
    ip netns add $without_vpn_ns_name
    ip link set macvlan0 netns $without_vpn_ns_name
    ip -n $without_vpn_ns_name link set lo up
    ip -n $without_vpn_ns_name link set macvlan0 up

    # ip netns exec $without_vpn_ns_name dhcpcd --ipv4only --oneshot --nobackground
    ip -n $without_vpn_ns_name addr add $static_ip_address/24 dev macvlan0
    ip -n $without_vpn_ns_name route add default via $gateway_address

    # fix ping without root access
    ip netns exec $without_vpn_ns_name sysctl net.ipv4.ping_group_range='0 2147483647' > /dev/null
}

if [ "$1" = "del" ]; then
    ip netns delete $without_vpn_ns_name
    exit 0
fi

grep_result=$(ip netns | grep -F $without_vpn_ns_name || echo "")
if [ -z "$grep_result" ]; then
    setup
fi


if [ -z "$1" ]; then
    command="zsh"
else
    command="$@"
fi
ip netns exec $without_vpn_ns_name sudo -E -u $user $command
